<% # ========================================================================
   # Tetris.CoordSet Unit Test
   # ========================================================================
%>
<% content_for('final') do %>

<script>

Test.context("Tetris.CoordSet",{

    setup: function() {
	this.set = Tetris.CoordSet.create();

	this.assertEachIs = function(xys) {
	    var that = this;

	    that.assertIdentical(xys.length, that.set.count());
	    xys.each(function(xy) {
		that.assertIdentical(true, that.set.contains(xy[0], xy[1]));
	    });
	    that.set.each(function(x,y) {
		that.assertIdentical(true, that.set.contains(x,y));
	    });
	};
    },
    teardown: function() {
	delete this.set;
    },

    "By default, a set should be empty": function() {
	true.shouldEqual(set.isEmpty());
	set.count().shouldEqual(0);
    },

    "The set should know what coords it was added": function() {
	set.add(3, 5);
	false.shouldEqual(set.isEmpty());
	set.count().shouldEqual(1);
	true.shouldEqual(set.contains(3,5));
    },

    "The set should keep track of multiple additions": function() {
	set.add(3, 5);
	set.add(2, 4);
	set.count().shouldEqual(2);
	true.shouldEqual(set.contains(3,5));
	true.shouldEqual(set.contains(2,4));
    },

    "The createWith constructor should help quick creation": function() {
	set = Tetris.CoordSet.createWith([[3,5],[2,4]]);
	true.shouldEqual(set.contains(3,5));
	true.shouldEqual(set.contains(2,4));
    },

    "The createWithX constructor should help quick creation": function() {
	set = Tetris.CoordSet.createWithX(3, [2,5]);
	set.count().shouldEqual(2);
	true.shouldEqual(set.contains(3,2));
	true.shouldEqual(set.contains(3,5));
    },

    "'each' should enumerate all elements": function() {
	var content = [[2,4],[3,5]];
	set = Tetris.CoordSet.createWith(content);
	this.assertEachIs(content);
    },

    "createWithX and each sequence": function() {
	set = Tetris.CoordSet.createWithX(15, Tetris.Arrays.range(0, 7)).add(14, 2)
	this.assertEachIs([[14, 2], [15, 0], [15, 1], [15, 2], [15, 3], [15, 4], [15, 5], [15, 6], [15, 7]]);
    },

    "createWithXY and each sequence": function() {
	set = Tetris.CoordSet.createWithXY([14,15], [1, 3]);
	this.assertEachIs([[14, 1], [14, 3], [15, 1], [15, 3]]);
    },

}) ;

if (window.main && (appMain = main)) main = null ;

</script>

<% end %>
